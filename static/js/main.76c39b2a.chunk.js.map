{"version":3,"sources":["practice/web.js","practice/Naav.js","practice/About.js","App.js","reportWebVitals.js","index.js"],"names":["Web","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","react_default","a","createElement","Fragment","className","style","color","mode","htmlFor","value","onChange","event","target","backgroundColor","name","id","cols","rows","onClick","newtext","toUpperCase","lowtext","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","filter","element","length","Nav","concat","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","role","toggleMode","Aboutus","aria-labelledby","data-bs-parent","App","setmode","body","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.76c39b2a.chunk.js","sourcesContent":["\r\nimport React, { useState } from \"react\"\r\nexport default function Web(props) {\r\n\r\n\r\n\r\n\r\n    const handleUpclick = () => {\r\n        let newtext = text.toUpperCase();\r\n\r\n        setText(newtext)\r\n    }\r\n\r\n\r\n    const handleLoclick = () => {\r\n        let lowtext = text.toLowerCase()\r\n\r\n        setText(lowtext)\r\n    }\r\n\r\n\r\n\r\n    // const handleExNum=()=> {\r\n    //     let ext = text.match(/\\d+/g)\r\n\r\n    //     setText(ext)\r\n    //     if(ext){\r\n    //         console.log(ext)\r\n\r\n\r\n    //        }\r\n    //        else{console.log(\"a\")}\r\n    //     setText(ext)\r\n    // }\r\n\r\n    const handlecopy = ()=>{\r\n        let text = document.getElementById('texu')\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleonChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('')\r\n    return (\r\n        <>\r\n            <header>\r\n                <div className=\"name\" style={{color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                    <div>\r\n                        <h1 > Congratulation</h1>\r\n                    </div>\r\n\r\n                    <label htmlFor=\"form\" className=\"my-form\"></label>\r\n                    <textarea className=\"textt\" value={text} onChange={handleonChange} style={{ backgroundColor: props.mode === 'dark' ? '#003344' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }}name=\"text\" id=\"texu\" cols=\"30\" rows=\"10\"></textarea>\r\n\r\n                    <div>\r\n                        <button className=\"btn btn-primary mx-2\" onClick={handleUpclick}>\r\n                            Get Upercase</button>\r\n                        <button className=\"btn btn-primary mx-2\" onClick={handleLoclick}>Get Lowercase</button>\r\n                        <button className=\"btn btn-primary mx-2\" onClick={handlecopy} >Copy Text</button>\r\n                    \r\n                        {/* <button className=\"btnn\" onClick={handleExNum}>get extract</button> */}\r\n\r\n\r\n\r\n                    </div>\r\n                    <h2 >Page Analycis</h2>\r\n                    <p >{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} word {text.length}charactor</p>\r\n                    <p >{0.08 * text.split(' ').filter((element)=>{return element.length!==0}).length}</p>\r\n\r\n                    <h2 >Preview</h2>\r\n                    <p >{text}</p>\r\n                    <h2 >Extract Number</h2>\r\n                    <p >{text.length>0?text:'Enter something in the textarea above to preview it here'} </p>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\n","\r\nimport React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n// import { a } from \"react-router-dom\"\r\n// import PropType from 'prop-types'\r\nexport default function Nav(props) {\r\n    return (\r\n        <>\r\n            <header>\r\n                <nav className={`navbar navbar-expand-lg navbar-\r\n                ${props.mode} bg-${props.mode}`}>\r\n                    <div className=\"container-fluid\">\r\n                        <Link className=\"navbar-brand\"  style={{color: props.mode === 'dark' ? 'white' : 'black' }} to=\"/\">{props.title}</Link>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                            <div className=\"navbar-nav\">\r\n                               <li>\r\n                               <Link className=\"btn btn-primary mx-1\" to='/' role=\"button\">Home</Link>\r\n                               </li>\r\n                                <li>\r\n                                <Link className=\"btn btn-primary mx-1\" to='/about' role=\"button\">About</Link>\r\n                                </li>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </nav>\r\n                {/* <nav classNameName=\"navbar h-className-resp\">\r\n                    <ul classNameName=\"navlist v-className-resp\">\r\n                    <li><a href=\"/\">Home</a></li>\r\n                    <li> <a href=\"/\">Explore</a> </li>\r\n                    <li> <a href=\"/\">About us</a> </li>\r\n                    <li> <a href=\"/\">Our plans</a> </li>\r\n                    <li> <a href=\"/\">support</a> </li>\r\n                    \r\n                    </ul>\r\n                    <input type=\"text\" classNameName=\"search \" placeholder=\"Search Here\" />\r\n                <button type=\"button\" classNameName=\"btn btn-primary \">Search</button> \r\n\r\n\r\n                <div classNameName=\"burgar\">\r\n                    <div classNameName=\"line\"></div>\r\n                    <div classNameName=\"line\"></div>\r\n                    <div classNameName=\"line\"></div>\r\n                </div>\r\n                \r\n                \r\n            </nav> */}\r\n                <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                </div>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function Aboutus(props) {\r\n    return (\r\n\r\n        <>\r\n            <div className=\"container\">\r\n                <h1>About us</h1>\r\n\r\n\r\n                <div className=\"accordion\" id=\"accordionExample\">\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n\r\n\r\n\r\n}","// import React from \"react\";\r\n// // import './App.css';\r\n// import { useState } from 'react';\r\n// import Web from './practice/web';\r\n// import Nav from './practice/Naav';\r\n// import './practice/T.css';\r\n// // import Aboutus from './practice/About'; \r\n\r\n// function App() {\r\n//   const [mode, setmode] = useState('light')\r\n\r\n//   const toggleMode = () => {\r\n//     if (mode === 'light') {\r\n//       setmode('dark');\r\n//       document.body.style.backgroundColor = '#003344'\r\n//     }\r\n//     else {\r\n//       setmode('light');\r\n//       document.body.style.backgroundColor = 'white'\r\n//     }\r\n//   }\r\n\r\n//   return (<>\r\n\r\n//     <Nav title='TextUtils' mode={mode} toggleMode={toggleMode} />\r\n//     <Web mode={mode} />\r\n//   </>\r\n\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\nimport { useState } from 'react';\r\nimport Web from './practice/web';\r\nimport Nav from './practice/Naav';\r\nimport './practice/T.css';\r\nimport Aboutus from './practice/About';\r\n// import Aboutus from './practice/About'; \r\n\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction App() {\r\n  const [mode, setmode] = useState('light')\r\n\r\n  const toggleMode = () => {\r\n    if (mode === 'light') {\r\n      setmode('dark');\r\n      document.body.style.backgroundColor = '#003344'\r\n      document.title = 'TextUtils - Dark Mode'\r\n    }\r\n    else {\r\n      setmode('light');\r\n      document.body.style.backgroundColor = 'white'\r\n      document.title = 'TextUtils - Light Mode'\r\n    }\r\n  }\r\n\r\n  // function App() {\r\n  //   document.body.style.backgroundColor = 'white'\r\n  // }\r\n\r\n\r\n\r\n  return (<>\r\n\r\n    <Router>\r\n      <Nav title='TextUtils' mode={mode} toggleMode={toggleMode} />\r\n      <div className=\"container my-3\">\r\n\r\n        <Switch>\r\n\r\n          <Route exact path=\"/about\">\r\n            <Aboutus />\r\n          </Route>\r\n\r\n          <Route exact path=\"/\">\r\n            <Web mode={mode} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n\r\n      {/* <Nav/> */}\r\n      {/* <Aboutus/> */}\r\n    </Router>\r\n\r\n  {/* <Nav title='TextUtils' mode={mode} toggleMode={toggleMode} />\r\n  <Web mode={mode}  */}\r\n    </>\r\n);\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}